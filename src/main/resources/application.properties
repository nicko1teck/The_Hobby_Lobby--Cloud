server.port=8080
site.url=http://localhost:8080
database=mysql

debug=false

spring.resources.static-locations=classpath:/WEB-INF/

spring.thymeleaf.enabled=false

spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.username=${REMOTE_DB_USER}
#spring.datasource.password=${REMOTE_DB_PASSWORD}
#spring.datasource.url=${REMOTE_DB_URL}

#RDS_HOSTNAME=jdbc:mysql://the-hobby-lobby-remote.ccizjkwkchsj.us-east-2.rds.amazonaws.com
#RDS_PORT=3306
#RDS_DB_NAME=the-hobby-lobby-remote
#RDS_USERNAME=admin
#RDS_PASSWORD=Newcoder20!

spring.datasource.username=admin
spring.datasource.password=Newcoder20!
spring.datasource.url=jdbc:mysql://the-hobby-lobby-remote.ccizjkwkchsj.us-east-2.rds.amazonaws.com:3306/springboottutorial?useSSL=false

spring.jpa.database=mysql
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.
##spring.datasource.initialization-mode=always

logging.level.org.hibernate.SQL=debug

mail.enable=true
spring.mail.protocol=smtp
spring.mail.host: smtp.gmail.com
spring.mail.port: 587
spring.mail.username: bluecollarcoding@gmail.com
spring.mail.password: Newcoder20!
spring.mail.properties.mail.smtp.auth: true
#spring.mail.properties.mail.smtp.starttls.enable: true
mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required: true
spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.properties.mail.smtp.starttls.enable=true
mail.smtp.debut=true

message.error.duplicate.user=This user already exists. Please log in.
message.invalid.user=Invalid user.
message.expired.token=This token has expired.
message.registration.confirmed=You can now log in.
message.error.forbidden=Access denied.  Sure you're logged in?
message.error.exception=this is the exception message.

photo.upload.directory=/img

#cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME}
#cloudinary.api_key=${CLOUDINARY_API_KEY}
#cloudinary.api_secret=${CLOUDINARY_API_SECRET}
#CLOUDINARY_URL=${CLOUDINARY_URL}

cloudinary.cloud_name=nicko1teck
cloudinary.api_key=697697678268857
cloudinary.api_secret=UFH1ZXH_4UZ8XNHchIj8Lwhpszw

photo.file.extensions=jpg,jpeg,gif,png

status.pagesize=10
results.pagesize=10

register.firstname.size="First name must be at least 2 letters."
register.surname.size="Last name must be at least 2 letters."

photo.upload.ok=Photo uploaded
photo.upload.invalid=Invalid image file
photo.upload.ioexception=Photo upload failed
photo.upload.toosmall=This photo is too small